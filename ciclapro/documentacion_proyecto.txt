===============================
DOCUMENTACI√ìN API REST - CICLARO
===============================

üìå DESCRIPCI√ìN
-------------
Ciclaro_API es un backend desarrollado en Django REST Framework para la gesti√≥n integral de un taller de bicicletas. Incluye funcionalidades para clientes, bicicletas, citas, ventas, reparaciones, repuestos y contabilidad.

El acceso a la API est√° protegido por autenticaci√≥n JWT (JSON Web Tokens).


üîê AUTENTICACI√ìN
----------------
Para acceder a los endpoints protegidos, debes autenticarte con un usuario registrado.

1. Obtener el token:
   POST /api/token/

   Body (JSON):
   {
       "username": "tu_usuario",
       "password": "tu_contrase√±a"
   }

   Respuesta:
   {
       "access": "token_jwt",
       "refresh": "refresh_token"
   }

2. Usar el token en cada solicitud:
   Header:
   Authorization: Bearer token_jwt


üìÅ ENDPOINTS DISPONIBLES
------------------------

CLIENTES
--------
GET     /api/clientes/
POST    /api/clientes/
GET     /api/clientes/{id}/
PUT     /api/clientes/{id}/
DELETE  /api/clientes/{id}/

BICICLETAS
----------
GET     /api/bicicletas/
POST    /api/bicicletas/
GET     /api/bicicletas/{id}/
PUT     /api/bicicletas/{id}/
DELETE  /api/bicicletas/{id}/

CITAS
-----
GET     /api/citas/
POST    /api/citas/
GET     /api/citas/{id}/
PUT     /api/citas/{id}/
DELETE  /api/citas/{id}/

VENTAS
------
GET     /api/ventas/
POST    /api/ventas/
GET     /api/ventas/{id}/
PUT     /api/ventas/{id}/
DELETE  /api/ventas/{id}/
‚Üí Al crear una venta, se genera autom√°ticamente un ingreso contable.

REPARACIONES
------------
GET     /api/reparaciones/
POST    /api/reparaciones/
GET     /api/reparaciones/{id}/
PUT     /api/reparaciones/{id}/
DELETE  /api/reparaciones/{id}/
‚Üí Al crear una reparaci√≥n, tambi√©n se genera un ingreso contable autom√°tico.

REPUESTOS
---------
GET     /api/repuestos/
POST    /api/repuestos/
GET     /api/repuestos/{id}/
PUT     /api/repuestos/{id}/
DELETE  /api/repuestos/{id}/

CONTABILIDAD
------------
GET     /api/movimientos/
POST    /api/movimientos/
GET     /api/movimientos/{id}/
‚Üí Puedes registrar egresos manuales

üìä REPORTES
-----------
GET     /api/resumen/
GET     /api/resumen/?desde=YYYY-MM-DD&hasta=YYYY-MM-DD

‚Üí Retorna resumen de ingresos, egresos y saldo
‚Üí Se actualiza autom√°ticamente al registrar ventas o reparaciones

Ejemplo de respuesta:

{
    "ingresos": 250000,
    "egresos": 50000,
    "saldo": 200000,
    "desde": "2025-05-01",
    "hasta": "2025-05-17"
}


üõ°Ô∏è SEGURIDAD
------------
Todos los endpoints (excepto el login) est√°n protegidos con autenticaci√≥n JWT.
Solo usuarios autenticados pueden acceder a los datos.


üì¶ GENERAR ARCHIVO DE DEPENDENCIAS
----------------------------------
Para guardar las librer√≠as usadas por el proyecto, genera un archivo `requirements.txt`:

1. Abre PowerShell en la carpeta del proyecto.
2. Activa el entorno virtual:
   .\venv\Scripts\Activate
3. Ejecuta:
   pip freeze > requirements.txt

Para instalar esas dependencias en otro equipo o entorno:

   pip install -r requirements.txt

============================
Fin de la Documentaci√≥n
============================
